<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.turnsole.rbac.mapper.SysAclmoduleMapper">
  <resultMap id="BaseResultMap" type="com.turnsole.rbac.domain.model.SysAclmodule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="level" jdbcType="VARCHAR" property="level" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="seq" jdbcType="TINYINT" property="seq" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
    <result column="operate_ip" jdbcType="VARCHAR" property="operateIp" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `sys_aclmodule`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.turnsole.rbac.domain.model.SysAclmodule" useGeneratedKeys="true">
    insert into `sys_aclmodule` (name, parent_id, level, 
      status, seq, remark, 
      operator, operate_time, operate_ip
      )
    values (#{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{level,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{seq,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{operator,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{operateIp,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.turnsole.rbac.domain.model.SysAclmodule">
    update `sys_aclmodule`
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      level = #{level,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      seq = #{seq,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      operate_ip = #{operateIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, parent_id, level, status, seq, remark, operator, operate_time, operate_ip
    from `sys_aclmodule`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, parent_id, level, status, seq, remark, operator, operate_time, operate_ip
    from `sys_aclmodule`
  </select>

  <select id="getChildDeptListByLevel" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, parent_id, level, status, seq, remark, operator, operate_time, operate_ip
    from `sys_aclmodule`
    WHERE level LIKE CONCAT(#{level},'.%')
  </select>

  <update id="batchUpdateLevel" parameterType="map">
    <foreach collection="sysAclModuleList" item="module" separator=";">
      UPDATE sys_aclmodule
      SET level = #{module.level}
      WHERE id = #{module.id}
    </foreach>
  </update>

  <select id="countByNameAndParentId" parameterType="map" resultType="int">
    SELECT count(1)
    FROM sys_aclmodule
    WHERE 1=1
    <if test="parentId != null">
      AND parent_id = #{parentId}
    </if>
    AND name = #{name}
    <if test="id != null">
      AND id != #{id}
    </if>
  </select>

  <select id="getAllAclModule" resultMap="BaseResultMap">
    SELECT id, name, parent_id, level, status, seq, remark, operator, operate_time, operate_ip
    FROM `sys_aclmodule`
  </select>

  <select id="countByParentId" parameterType="int" resultType="int">
    SELECT COUNT(1)
    FROM sys_aclmodule
    WHERE parent_id = #{aclModuleId}
  </select>

</mapper>